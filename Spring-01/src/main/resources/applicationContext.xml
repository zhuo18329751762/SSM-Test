<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
        <!--  1.导入的spring坐标是spring-context,对应版本是5.2.10.RELEASE  -->
        <!--  2.配置bean  -->
    <!--  bean标签标识配置bean
    id标签表示给bean起名字
    class属性表示给bean定义类型
    -->


    <!--  scope表示作用范围 prototype是多个对象   singleton是单个对象 -->
    <bean id="bookDao" name="dao" class="com.yangzhuo.dao.impl.BookDaoImpl" scope="prototype"/>
    <bean id="bookService" class="com.yangzhuo.service.impl.BookServiceImpl">
        <!--  7 配置server与dao的关系  -->
        <!--  property标签表示配置当前bean的属性
         name属性表示配置哪一个具体的属性
         ref属性表示参照哪一个bean
         -->
        <property name="bookDao" ref="bookDao"/>
    </bean>
    <!--方式一:构造方法实例化bean-->
<!--    <bean id="bookService" class="com.yangzhuo.service.impl.BookServiceImpl"/>-->

    <!--方式二:使用静态工厂实例化bean-->
<!--    <bean id="orderDao" class="com.yangzhuo.factory.OrderDaoFactory" factory-method="getOrderDao"/>-->

    <!--方式三:使用实例工厂实例化bean-->
<!--    <bean id="userFactory" class="com.yangzhuo.factory.UserDaoFactory"/>-->
<!--    <bean id="userDao" factory-method="getUserDao" factory-bean="userFactory"/>-->

    <!--方式四:使用FactoryBean实例化bean-->
    <bean id="userDao" class="com.yangzhuo.factory.UserDaoFactorBean"/>

</beans>